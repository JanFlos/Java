package tests;

import h2.DataBlock;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Types;
import java.util.List;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import com.google.common.collect.ImmutableList;
import dml.CommandBuilder;
import dml.Metadata;
import dml.RecordDeleter;
import dml.RecordInserter;
import dml.RecordUpdater;
import dml.TableColumn;

public class Tests {

    private Connection _connection;

    public Connection openConnection() {
        return _connection;
    }
    @BeforeClass
    public void openConnection() throws ClassNotFoundException, SQLException {
        if (_connection == null)
            Class.forName("oracle.jdbc.OracleDriver");
        System.setProperty("oracle.net.tns_admin",
                           "c:\\Oracle\\Dev10g\\NETWORK\\ADMIN");
        _connection = DriverManager.getConnection("jdbc:oracle:thin:@ece", "ec_calc", "calc");
    }

    @AfterClass
    public void closeConnection() throws SQLException {
        _connection.close();
    }

    @Test
    public void BuilderTest() {

        // Insert without returning
        Metadata metadata = getDMLMetadata(false);
        out(CommandBuilder.insertCommand(metadata));

        // Insert with returning
        metadata = getDMLMetadata(true);
        out(CommandBuilder.insertCommand(metadata));

        // Update statement
        out(CommandBuilder.updateCommand(metadata));

        out(CommandBuilder.deleteCommand(metadata));
        // out(DMLBuilder.lockCommand("berechnungen", ImmutableList.of("name",
        // "ber_id", "bezeichnung")));

    }

    /**
     * Test for inserting an record
     */
    @Test
    public void recordInserterTest() throws ClassNotFoundException, SQLException {

        Connection con = openConnection();
        Metadata metadata = getDMLMetadata(true);
        Object[] record = { 2, "kyn�vart" };
        RecordInserter inserter = new RecordInserter(con, metadata);
        inserter.post(record);

    }

    /**
     * Test of the update of an record
     */
    @Test
    public void recordUpdaterTest() throws ClassNotFoundException, SQLException {

        Connection con = openConnection();
        Metadata metadata = getDMLMetadata(true);

        Object[] record = { null, "kyn�vart" };
        RecordInserter inserter = new RecordInserter(con, metadata);
        inserter.post(record);

        record[1] = "Ku�vart";
        RecordUpdater updater = new RecordUpdater(con, metadata);
        updater.post(record);

    }

    private Metadata getDMLMetadata(boolean returningCols) {
        if (returningCols)
            return new Metadata("ttest",
                                ImmutableList.of("id", "name", "tag"),
                                ImmutableList.of(new TableColumn("id",
                                                                 Types.NUMERIC)),
                                ImmutableList.of("tag"));
        return new Metadata("ttest", ImmutableList.of("id", "name", "tag"));
    }

    /**
     * Test deleting a record
     */
    @Test
    public void recordDeleterTest() throws SQLException, ClassNotFoundException {

        Connection con = openConnection();
        Metadata metadata = getDMLMetadata(true);

        Object[] record = { null, "kyn�vart" };
        RecordInserter inserter = new RecordInserter(con, metadata);
        inserter.post(record);

        RecordDeleter delter = new RecordDeleter(con, metadata);
        delter.post(record);
    }

    @Test
    public void testMetadata() throws ClassNotFoundException, SQLException {
        
        Connection connection = openConnection();
        Metadata metadata = getDMLMetadata(true);
        List<String> pkcolumns = metadata.findPrimaryKeyColumns(connection, "TTEST");
        

    }

    /**
     * Test for inserting an record
     */
    @Test
    public void recordInserterTestWithReadOnlyColumns() throws ClassNotFoundException, SQLException {

        Connection con = openConnection();
        Object[] record = { 2, "kyn�vart" };
        RecordInserter inserter = new RecordInserter(con,
                                                     new Metadata("ttest",
                                                                  ImmutableList.of("id", "name"),
                                                                  ImmutableList.of(new TableColumn("id",
                                                                                                   Types.INTEGER)),
                                                                  ImmutableList.of("vtp_id_mandant")));
        inserter.post(record);

    }

    @Test
    public void dataBlockInsertTest() throws SQLException, ClassNotFoundException {

        Connection con = openConnection();

        DataBlock dataBlock = DataBlock.createDataBlock(con, "ttest");
        dataBlock.createRecord();
        dataBlock.setItem("name", "Karel");
        dataBlock.post();
    }


    private void out(String text) {
        System.out.println(text);

    }

}
